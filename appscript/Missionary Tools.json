{"files":[{"id":"e899cbbc-e5d4-462b-86b0-877ed065c40b","name":"Code","type":"server_js","source":"/**\n * @OnlyCurrentDoc\n */\n\nvar baseURL \u003d \"https://api-dot-eighth-vehicle-287322.uc.r.appspot.com/\"; // Don\u0027t forget last slash\n\nfunction onOpen() {\n  SpreadsheetApp.getUi() \n      .createMenu(\u0027Missionary Tools\u0027)\n      // .addItem(\u0027Find Member Profiles\u0027, \u0027showPopup\u0027)\n      .addSubMenu(SpreadsheetApp.getUi().createMenu(\u0027Find Member Profiles\u0027)\n          .addItem(\u0027Start\u0027, \u0027showPopup\u0027)\n          .addItem(\u0027Reset\u0027, \u0027reset\u0027))\n      .addSubMenu(SpreadsheetApp.getUi().createMenu(\u0027Page Interaction Manager\u0027)\n          .addItem(\u0027Create PMI Sheet\u0027, \u0027setUpSheet\u0027)\n          .addItem(\u0027Remove PMI Sheet\u0027, \u0027tearDownSheet\u0027)\n          .addItem(\u0027Activate Triggers\u0027, \u0027activateTriggers\u0027)\n          .addItem(\u0027Test Update Row\u0027, \u0027updateNewRow\u0027)\n          .addItem(\u0027Highlight Sheet\u0027, \u0027highlightSheet\u0027)\n          .addItem(\u0027Link Facebook Page\u0027, \u0027highlightSheet\u0027))\n      .addToUi();\n}\n\nfunction showPopup() {\n  var html \u003d HtmlService.createTemplateFromFile(\u0027sideBar\u0027).evaluate()\n      .setTitle(\u0027Find Member Profiles\u0027)\n      .setWidth(600)\n      .setHeight(600);\n  SpreadsheetApp.getUi() // Or DocumentApp or SlidesApp or FormApp.\n      .showModalDialog(html, \u0027Find Member Profiles\u0027);\n}\n\n// Reset the bot on the server, remove all data from the list of bots\nfunction reset() {\n  var url \u003d encodeURI(baseURL + `bot?church_username\u003d${get_church_username()}`);\n  var options \u003d {\n    \u0027method\u0027 : \u0027delete\u0027,\n  };\n  var userProperties \u003d PropertiesService.getUserProperties();\n  userProperties.deleteProperty(\u0027church_username\u0027);\n  UrlFetchApp.fetch(url, options);\n}\n\nfunction next(data\u003d{\u0027index\u0027:0, \u0027link\u0027:\"test link\", \u0027name\u0027: \u0027Test name\u0027}) {\n    var sheet \u003d SpreadsheetApp.getActiveSheet();\n    sheet.getRange(sheet.getLastRow()+1, 1, 1, 2).setValues([[data[\u0027name\u0027], data[\u0027link\u0027]]]);\n}\nfunction set_church_username(name){\n  if (name !\u003d\u003d \"\"){\n    var userProperties \u003d PropertiesService.getUserProperties();\n    userProperties.setProperty(\u0027church_username\u0027, name);\n  }\n}\n\nfunction get_church_username(){\n  var userProperties \u003d PropertiesService.getUserProperties();\n  var church_username \u003d userProperties.getProperty(\u0027church_username\u0027);\n  if (church_username \u003d\u003d null) {return undefined;}\n  return church_username;\n}\n\nfunction get(url){\n  var response \u003d UrlFetchApp.fetch(url);\n  return response.getContentText();\n}\n\nfunction processLoginForm(form){\n  var requestOptions \u003d {\n    \u0027method\u0027: \u0027POST\u0027,\n    \u0027payload\u0027: form,\n  };\n  var url \u003d encodeURI(baseURL + \u0027bot\u0027);\n  var response \u003d UrlFetchApp.fetch(url, requestOptions);\n  return response.getContentText();  \n}\n\nfunction processKeyForm(form){\n  var requestOptions \u003d {\n    \u0027method\u0027: \u0027POST\u0027,\n    \u0027payload\u0027: form,\n  };\n  var url \u003d encodeURI(baseURL + \u0027add-key\u0027);\n  var response \u003d UrlFetchApp.fetch(url, requestOptions);\n  return response.getContentText();\n}\n\nfunction include(filename) {\n  return HtmlService.createHtmlOutputFromFile(filename)\n      .getContent();\n}"},{"id":"d0d4d2d2-3f89-4a37-b415-c1e99f891a09","name":"appsscript","type":"json","source":"{\n  \"oauthScopes\": [\n    \"https://www.googleapis.com/auth/script.container.ui\",\n    \"https://www.googleapis.com/auth/script.external_request\",\n    \"https://www.googleapis.com/auth/script.scriptapp\",\n    \"https://www.googleapis.com/auth/spreadsheets\"\n  ],\n  \"timeZone\": \"America/Mexico_City\",\n  \"dependencies\": {\n  },\n  \"exceptionLogging\": \"STACKDRIVER\",\n  \"runtimeVersion\": \"V8\"\n}"},{"id":"2bc63f78-7ffd-40ea-887d-88b9dacd1105","name":"sideBar","type":"html","source":"\u003c!DOCTYPE html\u003e\n\u003chtml\u003e\n\u003chead\u003e\n  \u003cmeta charset\u003d\"utf-8\"\u003e\n  \u003cbase target\u003d\"_top\"\u003e\n  \u003cmeta name\u003d\"referrer\" content\u003d\"origin-when-crossorigin\" id\u003d\"meta_referrer\"\u003e\n  \u003c?!\u003d include(\u0027facebookStylesheet\u0027); ?\u003e\n  \u003cstyle\u003e\n  .hidden_elem, ._6a, .uiPopover{\n   visibility: hidden;\n  }\n  \u003c/style\u003e\n  \u003cscript\u003e\n  var baseURL \u003d \"https://api-dot-eighth-vehicle-287322.uc.r.appspot.com/\";\n  var church_username \u003d \"\u003c?\u003d get_church_username(); ?\u003e\";\n  \u003c/script\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n  \u003cdiv id\u003d\u0027title\u0027\u003e\u003c/div\u003e\n  \u003c?!\u003d include(\u0027login\u0027); ?\u003e\n  \u003c?!\u003d include(\u0027send_auth_key\u0027); ?\u003e\n  \u003c?!\u003d include(\u0027displayData\u0027); ?\u003e\n  \u003cscript\u003e\n    if (church_username !\u003d\u003d \"\") {\n      hideLogin();\n      showContent();\n      start();\n    }\n  \u003c/script\u003e\n\u003c/body\u003e\n\u003c/html\u003e"},{"id":"fd367464-de40-470b-8f21-2592a57cb466","name":"login","type":"html","source":"\u003cscript\u003e\n    // Prevent forms from submitting.\n    function preventFormSubmit() {\n      var forms \u003d document.querySelectorAll(\u0027form\u0027);\n      for (var i \u003d 0; i \u003c forms.length; i++) {\n        forms[i].addEventListener(\u0027submit\u0027, function(event) {\n          event.preventDefault();\n        });\n      }\n    }\n    window.addEventListener(\u0027load\u0027, preventFormSubmit);\n    function handleFormSubmit(formObject) {\n      google.script.run.withSuccessHandler(doSubmit).processLoginForm(formObject);\n      church_username \u003d formObject.church_username.value;\n      google.script.run.withSuccessHandler().set_church_username(church_username);\n    }\n    function showContent(){\n      document.getElementById(\u0027content\u0027).style.display \u003d \"block\";\n      document.getElementById(\u0027controls\u0027).style.display \u003d \"block\";\n    }\n    function hideContent(){\n      document.getElementById(\u0027content\u0027).style.display \u003d \"none\";\n      document.getElementById(\u0027controls\u0027).style.display \u003d \"none\";\n    }\n    function hideLogin(){\n      document.getElementById(\u0027log-form\u0027).style.display \u003d \"none\";\n    }\n    function showLogin(){\n      document.getElementById(\u0027log-form\u0027).style.display \u003d \"block\";\n    }\n    function doSubmit(url) {\n      hideLogin();\n      showContent();\n      start();\n    }\n\u003c/script\u003e\n\u003cdiv id\u003d\"log-form\"\u003e\n  \u003cform id\u003d\"loginForm\" onsubmit\u003d\"handleFormSubmit(this)\" method\u003d\"POST\"\u003e\n    \u003cinput type\u003d\"text\" name\u003d\"church_username\" placeholder\u003d\"Church Username\" required/\u003e\n    \u003cinput type\u003d\"password\" name\u003d\"church_password\" placeholder\u003d\"Church Password\" required/\u003e\n    \u003cinput type\u003d\"text\" name\u003d\"facebook_username\" placeholder\u003d\"Facebook Username\" required/\u003e\n    \u003cinput type\u003d\"password\" name\u003d\"facebook_password\" placeholder\u003d\"Facebook Password\" required/\u003e\n    \u003cinput type\u003d\"number\" name\u003d\"pros_area_id\" placeholder\u003d\"Proselyting Area ID\" required/\u003e\n    \u003cbutton type\u003d\"submit\" class\u003d\"btn\"\u003eSubmit\u003c/button\u003e\n  \u003c/form\u003e\n\u003c/div\u003e "},{"id":"f210c731-f54c-47c3-bb1e-7001720f91bd","name":"facebookStylesheet","type":"html","source":"\u003clink rel\u003d\"stylesheet\" type\u003d\"text/css\" href\u003d\"https://static.xx.fbcdn.net/rsrc.php/v3/yr/l/0,cross/iEnpGhXUEyL.css?_nc_x\u003dx3f5HuSbL_a\" crossorigin\u003d\"anonymous\"\u003e\n\u003clink rel\u003d\"stylesheet\" type\u003d\"text/css\" href\u003d\"https://static.xx.fbcdn.net/rsrc.php/v3/ya/l/0,cross/x3keLgUytf-xOSNT7Df9xS.css?_nc_x\u003dx3f5HuSbL_a\" crossorigin\u003d\"anonymous\"\u003e\n\u003clink type\u003d\"text/css\" rel\u003d\"stylesheet\" href\u003d\"https://static.xx.fbcdn.net/rsrc.php/v3/yp/l/0,cross/f1nbtJDe6vlvHiMs0KVEyG9yBFUmz8aGCykiFpkFR5s7.css?_nc_x\u003dx3f5HuSbL_a\" data-bootloader-hash\u003d\"KZe3O\" crossorigin\u003d\"anonymous\" data-p\u003d\":127,5,30,47\"\u003e\n\u003clink rel\u003d\"stylesheet\" type\u003d\"text/css\" href\u003d\"https://static.xx.fbcdn.net/rsrc.php/v3/yZ/l/0,cross/d2a-OW91xHOx3keLgUytf-.css?_nc_x\u003dx3f5HuSbL_a\" crossorigin\u003d\"anonymous\"\u003e\n\u003clink type\u003d\"text/css\" rel\u003d\"stylesheet\" href\u003d\"https://static.xx.fbcdn.net/rsrc.php/v3/yg/l/0,cross/csPwaghOt5p.css?_nc_x\u003dFE1_CPRM5cq\" data-bootloader-hash\u003d\"0h4JV\" crossorigin\u003d\"anonymous\"\u003e\n\u003clink type\u003d\"text/css\" rel\u003d\"stylesheet\" href\u003d\"https://static.xx.fbcdn.net/rsrc.php/v3/yv/l/0,cross/V1mDW1L26mj.css?_nc_x\u003dFE1_CPRM5cq\" data-bootloader-hash\u003d\"VoioI\" crossorigin\u003d\"anonymous\"\u003e\n\u003clink type\u003d\"text/css\" rel\u003d\"stylesheet\" href\u003d\"https://static.xx.fbcdn.net/rsrc.php/v3/yH/l/0,cross/RCmxW9Tz2G_.css?_nc_x\u003dFE1_CPRM5cq\" data-bootloader-hash\u003d\"46xzO\" crossorigin\u003d\"anonymous\"\u003e\n\u003clink type\u003d\"text/css\" rel\u003d\"stylesheet\" href\u003d\"https://static.xx.fbcdn.net/rsrc.php/v3/yb/l/0,cross/xqGrN2ZghAu.css?_nc_x\u003dFE1_CPRM5cq\" data-bootloader-hash\u003d\"Hmtqb\" crossorigin\u003d\"anonymous\"\u003e\n\u003clink type\u003d\"text/css\" rel\u003d\"stylesheet\" href\u003d\"https://static.xx.fbcdn.net/rsrc.php/v3/yc/l/0,cross/395dd4xtOtp.css?_nc_x\u003dFE1_CPRM5cq\" data-bootloader-hash\u003d\"NdD0I\" crossorigin\u003d\"anonymous\"\u003e\n\u003clink type\u003d\"text/css\" rel\u003d\"stylesheet\" href\u003d\"https://static.xx.fbcdn.net/rsrc.php/v3/yQ/l/0,cross/v-O-FUdgiL_.css?_nc_x\u003dFE1_CPRM5cq\" data-bootloader-hash\u003d\"Gqq4v\" crossorigin\u003d\"anonymous\"\u003e\n\u003clink type\u003d\"text/css\" rel\u003d\"stylesheet\" href\u003d\"https://static.xx.fbcdn.net/rsrc.php/v3/yl/l/0,cross/NL-WKGZRVys.css?_nc_x\u003dFE1_CPRM5cq\" data-bootloader-hash\u003d\"fgK5K\" crossorigin\u003d\"anonymous\"\u003e\n\u003clink type\u003d\"text/css\" rel\u003d\"stylesheet\" href\u003d\"https://static.xx.fbcdn.net/rsrc.php/v3/yw/l/0,cross/Q8n5iYQvcx0.css?_nc_x\u003dFE1_CPRM5cq\" data-bootloader-hash\u003d\"iKjY0\" crossorigin\u003d\"anonymous\"\u003e\n\u003clink type\u003d\"text/css\" rel\u003d\"stylesheet\" href\u003d\"https://static.xx.fbcdn.net/rsrc.php/v3/y4/l/0,cross/pnUJ6pL9r8g.css?_nc_x\u003dFE1_CPRM5cq\" data-bootloader-hash\u003d\"/MMih\" crossorigin\u003d\"anonymous\"\u003e\n\u003clink type\u003d\"text/css\" rel\u003d\"stylesheet\" href\u003d\"https://static.xx.fbcdn.net/rsrc.php/v3/yB/l/0,cross/t_kQpzenBaF.css?_nc_x\u003dFE1_CPRM5cq\" data-bootloader-hash\u003d\"/N/GP\" crossorigin\u003d\"anonymous\"\u003e\n\u003clink type\u003d\"text/css\" rel\u003d\"stylesheet\" href\u003d\"https://static.xx.fbcdn.net/rsrc.php/v3/yl/l/0,cross/QBNhkqEMET2.css?_nc_x\u003dFE1_CPRM5cq\" data-bootloader-hash\u003d\"2kcPg\" crossorigin\u003d\"anonymous\"\u003e\n\u003clink type\u003d\"text/css\" rel\u003d\"stylesheet\" href\u003d\"https://static.xx.fbcdn.net/rsrc.php/v3/y9/l/0,cross/d1T7Ct8dCUx.css?_nc_x\u003dFE1_CPRM5cq\" data-bootloader-hash\u003d\"XgY2x\" crossorigin\u003d\"anonymous\"\u003e\n\u003clink type\u003d\"text/css\" rel\u003d\"stylesheet\" href\u003d\"https://static.xx.fbcdn.net/rsrc.php/v3/y_/l/0,cross/jIXVtEf79Tx.css?_nc_x\u003dFE1_CPRM5cq\" data-bootloader-hash\u003d\"KCfKF\" crossorigin\u003d\"anonymous\"\u003e\n\u003clink type\u003d\"text/css\" rel\u003d\"stylesheet\" href\u003d\"https://static.xx.fbcdn.net/rsrc.php/v3/yk/l/0,cross/m1Q8tKue0I5.css?_nc_x\u003dFE1_CPRM5cq\" data-bootloader-hash\u003d\"W+DYi\" crossorigin\u003d\"anonymous\"\u003e\n\u003clink type\u003d\"text/css\" rel\u003d\"stylesheet\" href\u003d\"https://static.xx.fbcdn.net/rsrc.php/v3/y0/l/0,cross/lWFeXuVlJPp.css?_nc_x\u003dFE1_CPRM5cq\" data-bootloader-hash\u003d\"LhbNv\" crossorigin\u003d\"anonymous\"\u003e\n\u003clink type\u003d\"text/css\" rel\u003d\"stylesheet\" href\u003d\"https://static.xx.fbcdn.net/rsrc.php/v3/yF/l/0,cross/kFewQnDeExs.css?_nc_x\u003dFE1_CPRM5cq\" data-bootloader-hash\u003d\"1vXE4\" crossorigin\u003d\"anonymous\"\u003e\n\u003clink type\u003d\"text/css\" rel\u003d\"stylesheet\" href\u003d\"data:text/css; charset\u003dutf-8,%23bootloader_P_mr5{height:42px;}.bootloader_P_mr5{display:block!important;}\" data-bootloader-hash\u003d\"P/mr5\"\u003e\n\u003clink type\u003d\"text/css\" rel\u003d\"stylesheet\" href\u003d\"https://static.xx.fbcdn.net/rsrc.php/v3/y2/l/0,cross/A5Or-EpFcs-.css?_nc_x\u003dFE1_CPRM5cq\" data-bootloader-hash\u003d\"iH/w/\" crossorigin\u003d\"anonymous\"\u003e\n\u003clink type\u003d\"text/css\" rel\u003d\"stylesheet\" href\u003d\"https://static.xx.fbcdn.net/rsrc.php/v3/yB/l/0,cross/_QH36WMEQr6.css?_nc_x\u003dFE1_CPRM5cq\" data-bootloader-hash\u003d\"pWb6/\" crossorigin\u003d\"anonymous\"\u003e"},{"id":"d799316a-5e92-4b5e-9bd9-c48bc23c7ed6","name":"displayData","type":"html","source":"\u003cscript\u003e\nvar index \u003d 0;\nvar buffer \u003d undefined;\nvar is_first_time \u003d true;\nfunction start() {\n  if (is_first_time \u003d\u003d true) {\n    var url \u003d encodeURI(baseURL + \u0027get-next-profile?church_username\u003d\u0027 + church_username);\n    google.script.run.withSuccessHandler(function(data) {\n      buffer \u003d JSON.parse(data);\n      google.script.run.withSuccessHandler(updateContent).withFailureHandler(onFailureGet).get(url);\n    }).withFailureHandler(onFailureGet).get(url);\n    is_first_time \u003d false;\n  }\n  \n  window.setInterval(function() {\n      var url \u003d encodeURI(baseURL + \u0027bot?church_username\u003d\u0027 + church_username);\n      google.script.run.withSuccessHandler(updateStatus).withFailureHandler(onFailureGet).get(url);\n  }, 10000);  \n}\n\nfunction onFailureGet(error) {\n    console.log(error.message);\n}\nfunction updateStatus(text) {\n    var div \u003d document.getElementById(\"title\");\n    div.innerHTML \u003d text;\n    if (text.includes(\"waiting for key from\")) {\n       document.getElementById(\"facebook-key-div\").style.display \u003d \u0027block\u0027;\n       hideContent();\n       hideLogin();\n    } else if (text.includes(\"Removed bot\")){\n      showLogin();\n      google.script.run.withSuccessHandler(funtion(x){}).reset;\n    } else {\n       document.getElementById(\"facebook-key-div\").style.display \u003d \u0027none\u0027;\n       showContent();\n    }\n}\nfunction updateContent(data) {\n    data \u003d JSON.parse(data);\n    console.log(data);\n    var div \u003d document.getElementById(\"content\");\n    div.innerHTML \u003d \"\";\n    var about \u003d document.createRange().createContextualFragment(buffer.about);\n    var content \u003d document.createRange().createContextualFragment(buffer.content);\n    div.append(about);\n    div.append(content);\n    buffer \u003d data;\n    var elements \u003d document.getElementsByClassName(\"_42ft _4jy0 FriendRequestAdd addButton _4jy3 _517h _51sy\");\n    for (var i \u003d 0; i \u003c elements.length; i++) {\n        elements[i].addEventListener(\u0027click\u0027, next, false);\n        elements[i].innerText \u003d \u0027Add to Sheet\u0027;\n    }\n    var profile_link \u003d document.getElementsByClassName(\"_32mo\");\n    for (var i \u003d 0; i \u003c profile_link.length; i++) {\n        profile_link[i].addEventListener(\u0027click\u0027, next, false);\n        profile_link[i].innerHTML \u003d profile_link[i].innerText.bold();\n    }\n    // V2 facebook\n    var profile_title \u003d document.getElementsByClassName(\"oajrlxb2 g5ia77u1 qu0x051f esr5mh6w e9989ue4 r7d6kgcz rq0escxv nhd2j8a9 nc684nl6 p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x jb3vyjys rz4wbd8a qt6c0cv9 a8nywdso i1ao9s8h esuyzwwr f1sip0of lzcic4wl oo9gr5id gpro0wi8 lrazzd5p dkezsu63\");\n    for (var i \u003d 0; i \u003c profile_title.length; i++) {\n        profile_title[i].addEventListener(\u0027click\u0027, next, false);\n    }\n    google.script.run.withSuccessHandler(updateStatus).withFailureHandler(onFailureGet).get(encodeURI(baseURL + \u0027bot?church_username\u003d\u0027 + church_username));\n}\n\nfunction next(e) {\n    var url \u003d encodeURI(baseURL + \u0027get-next-profile?church_username\u003d\u0027 + church_username);\n    if (e !\u003d undefined) {\n    // Old Facebook\n        if (e.srcElement.closest(\"._4p2o._87m1\") !\u003d null){\n            google.script.run.next({\n            \u0027index\u0027: index,\n            \u0027link\u0027: e.srcElement.closest(\"._4p2o._87m1\").querySelector(\u0027._32mo\u0027).href,\n            \u0027name\u0027: e.srcElement.closest(\"._4p2o._87m1\").querySelector(\u0027._32mo\u0027).innerText\n            })\n        }// New Facebook\n        else if(e.srcElement.closest(\".sjgh65i0\") !\u003d null){\n            google.script.run.next({\n            \u0027index\u0027: index,\n            \u0027link\u0027: e.srcElement.closest(\".sjgh65i0\").querySelector(\u0027.oajrlxb2.g5ia77u1.qu0x051f.esr5mh6w.e9989ue4.r7d6kgcz.rq0escxv.nhd2j8a9.nc684nl6.p7hjln8o.kvgmc6g5.cxmmr5t8.oygrvhab.hcukyx3x.jb3vyjys.rz4wbd8a.qt6c0cv9.a8nywdso.i1ao9s8h.esuyzwwr.f1sip0of.lzcic4wl.oo9gr5id.gpro0wi8.lrazzd5p.dkezsu63\u0027).href,\n            \u0027name\u0027: e.srcElement.closest(\".sjgh65i0\").querySelector(\u0027.oajrlxb2.g5ia77u1.qu0x051f.esr5mh6w.e9989ue4.r7d6kgcz.rq0escxv.nhd2j8a9.nc684nl6.p7hjln8o.kvgmc6g5.cxmmr5t8.oygrvhab.hcukyx3x.jb3vyjys.rz4wbd8a.qt6c0cv9.a8nywdso.i1ao9s8h.esuyzwwr.f1sip0of.lzcic4wl.oo9gr5id.gpro0wi8.lrazzd5p.dkezsu63\u0027).innerText\n            });\n        }\n    }\n    index++;\n    google.script.run.withSuccessHandler(updateContent).withFailureHandler(onFailureGet).get(url);\n}\n\u003c/script\u003e\n\u003cdiv id\u003d\"controls\" style\u003d\"margin: 0 auto; display:none;\"\u003e\n  \u003cinput type\u003d\"button\" value\u003d\"Next\" onclick\u003d\"next();\" class\u003d\"_42ft _4jy0 FriendRequestAdd addButton _4jy3 _517h\"/\u003e\n\u003c/div\u003e\n\u003cdiv id\u003d\"content\" style\u003d\u0027display:none;\u0027\u003e\u003c/div\u003e"},{"id":"cd6d4da5-d592-422f-b1a9-362e047cee4f","name":"send_auth_key","type":"html","source":"\u003cdiv id\u003d\"facebook-key-div\" style\u003d\u0027display:none;\u0027\u003e\n  \u003cform id\u003d\"facebook-key-form\" onsubmit\u003d\"handleFormKeySubmit(this)\" method\u003d\"POST\"\u003e\n    \u003cinput type\u003d\"hidden\" name\u003d\"church_username\"\u003e\n    \u003cinput type\u003d\"number\" name\u003d\"key\" placeholder\u003d\"Facebook Auth key\" required/\u003e\n    \u003cbutton type\u003d\"submit\" class\u003d\"btn\"\u003eSubmit\u003c/button\u003e\n  \u003c/form\u003e\n\u003c/div\u003e \n\u003cscript\u003e\n    // Prevent forms from submitting.\n    function preventFormSubmit() {\n      var forms \u003d document.querySelectorAll(\u0027form\u0027);\n      for (var i \u003d 0; i \u003c forms.length; i++) {\n        forms[i].addEventListener(\u0027submit\u0027, function(event) {\n          event.preventDefault();\n        });\n      }\n    }\n    window.addEventListener(\u0027load\u0027, preventFormSubmit);\n    function handleFormKeySubmit(formObject) {\n      formObject.church_username.value \u003d church_username;\n      google.script.run.withSuccessHandler(doSubmitKey).processKeyForm(formObject);\n    }\n    function doSubmitKey(url) {\n      document.getElementById(\"facebook-key-div\").style.display \u003d \"none\";\n      showContent();\n    }\n\u003c/script\u003e\n"},{"id":"87993ba6-bbb1-4fc5-aead-34e71b22be5a","name":"PMI_main","type":"server_js","source":"// Main function for the program\nfunction doLogicPageMessages(e) {\n  /*\n  Runs from the onChange trigger\n  */\n  Logger.log(JSON.stringify( e , null, 2 ));\n  \n  // Determine what type of onChange event it is\n  switch (e.changeType){\n    case \"INSERT_ROW\":\n      // Run logic to move row to top\n      updateNewRow();\n      \n      // Expand the rules\n      updateConditionalFormattingRules();\n      updateDataValidationRules();\n      highlightSheet();\n      \n      // End\n      break;    \n    default:\n  }\n}\n\nfunction test_doLogicPageMessages(){\n  /**/\n  var e \u003d JSON.parse(\u0027{ \"authMode\": \"FULL\", \"changeType\": \"INSERT_ROW\", \"source\": {}, \"triggerUid\": \"5026549\", \"user\": { \"email\": \"northdakota.bismarck@missionary.org\", \"nickname\": \"northdakota.bismarck\" }}\u0027)\n  doLogicPageMessages(e);\n}\n\n\nfunction highlightSheet(){\n  /*\n  Ensure acurate highlighting on the sheet\n  */\n  var sheet \u003d SpreadsheetApp.getActiveSheet();\n  \n  // Check if highlighting is enabled\n  var finder \u003d sheet.createDeveloperMetadataFinder();\n  var results \u003d finder.withKey(\u0027highlightEnabled\u0027);\n  var test \u003d results.find()[0].getValue();\n  if (test !\u003d \"TRUE\"){ return; }\n  \n  // Highlight the rows in red that contain a matching PSID and have a default status\n  // Get the values from the sheet\n  var range \u003d sheet.getDataRange().offset(headerRowNumber, 0, sheet.getLastRow());\n  var values \u003d range.getValues();\n  \n  // Read in the table header translate to in\n  tableHeader \u003d new TableHeader;\n  \n  // Filter the values and get all PSID where status \u003d\u003d select\n  var selectPSID \u003d values.filter(row \u003d\u003e row[tableHeader.getColumnIndex(\u0027Status\u0027)] \u003d\u003d \u0027Select\u0027).map(row \u003d\u003e row[tableHeader.getColumnIndex(\u0027PSID\u0027)]);\n  \n  // Map the values if PSID is in previous filter results then mark the line red\n  var colorRow \u003d function(row){\n    /* Color a specific cell in a row */\n    var test \u003d row[tableHeader.getColumnIndex(\u0027PSID\u0027)];\n    if (selectPSID.includes(row[tableHeader.getColumnIndex(\u0027PSID\u0027)])) {\n      var res \u003d new Array(row.length).fill(\"red\");\n    } else {\n      var res \u003d new Array(row.length);\n    }\n    return res;\n  };\n  var results \u003d values.map(colorRow);\n  \n  // Write back the results to google sheets\n  range.setBackgrounds(results);\n  \n  // lock font to arial\n}\n\n\nfunction validateSheet(){\n  /*\n  Function ensures that all the rules are being kept\n  */\n  // Get the current active sheet\n  var sheet \u003d SpreadsheetApp.getActiveSheet();\n  \n  // Read in the table header translate to in\n  tableHeader \u003d new TableHeader;\n  \n  // Get range of all data\n  var range \u003d sheet.getDataRange();\n  \n  // Ensure only one entry is kept\n  range.removeDuplicates([tableHeader.getColumnIndex(\"PSID\")]);\n}\n\nfunction setUpSheet() {\n  /*\n  */\n  // Begin Setting up the sheet\n  var sheet \u003d SpreadsheetApp.getActiveSpreadsheet();\n  var spreadSheet \u003d sheet.getActiveSheet();\n  \n  // Check if there are already sheets with the names to be created if so, give an error notifcation that the sheet names already exist\n\n  var sheetNames \u003d sheet.getSheets().map(sheet \u003d\u003e sheet.getName());\n  var neededSheetNames \u003d [\u0027Ad Likes\u0027, \u0027Page Messages\u0027, \u0027Data Storage\u0027];\n  var nameIntersection \u003d sheetNames.filter(name \u003d\u003e neededSheetNames.includes(name));\n\n  if (nameIntersection \u003d\u003d\u003d undefined || nameIntersection.length \u003e 0){\n    nameIntersection.forEach(name \u003d\u003e sheet.deleteSheet(sheet.getSheetByName(name)));\n    deactivateTrigger();\n    // Notify user that the sheet(s) already exist\n    /*\n    var ui \u003d SpreadsheetApp.getUi();\n    var message \u003d `Sheet names already exist. ${nameIntersection}`\n    ui.alert(message);\n    return;\n    */\n  }\n\n  // Create \u0027Page Messages\u0027 sheet\n  var pageMessagHeaders \u003d [\u0027Date\u0027, \u0027Name\u0027, \u0027Gender\u0027, \u0027Profile Link\u0027, \u0027PSID\u0027, \u0027Source\u0027, \u0027Assignment\u0027, \u0027Status\u0027, \u0027@Sac\u0027, \u0027On Date\u0027, \u0027Message\u0027, \u0027Notes\u0027, \u0027Counter\u0027];\n  var sheetName \u003d \"Page Messages\";\n  \n  // Insert sheet\n  var newSheet \u003d sheet.insertSheet(sheetName);\n  // Wrtite headers\n  var header \u003d newSheet.getRange(1,1,1, pageMessagHeaders.length).setValues([pageMessagHeaders]);\n\n  // Trim columns\n  var deleteColumns \u003d newSheet.getMaxColumns() - newSheet.getLastColumn();\n  newSheet.deleteColumns((newSheet.getLastColumn() +1), deleteColumns); \n\n  // Enable sorting and merging on active sheet\n  setHighlighting(\u0027FALSE\u0027);\n  setSorting(\u0027TRUE\u0027);\n  setMerging(\u0027TRUE\u0027);\n\n  // Create ad likes sheet\n  var adLikesHeaders \u003d [\u0027Date\u0027, \u0027Name\u0027, \u0027Gender\u0027, \u0027Profile Link\u0027, \u0027PSID\u0027, \u0027Source\u0027, \u0027Assignment\u0027, \u0027Status\u0027, \u0027@Sac\u0027, \u0027On Date\u0027, \u0027Reaction\u0027, \u0027Notes\u0027, \u0027Counter\u0027];\n  var sheetName \u003d \"Ad Likes\";\n  \n  // Write headers\n  var newSheet \u003d sheet.insertSheet(sheetName);\n  var header \u003d newSheet.getRange(1,1,1, adLikesHeaders.length).setValues([adLikesHeaders]);\n  \n  // Trim to length\n  var deleteColumns \u003d newSheet.getMaxColumns() - newSheet.getLastColumn();\n  newSheet.deleteColumns((newSheet.getLastColumn() +1), deleteColumns); \n  \n  // Enable highlighting on sheet ad likes sheet\n  setHighlighting(\u0027TRUE\u0027);\n  setSorting(\u0027TRUE\u0027);\n  setMerging(\u0027FALSE\u0027);\n\n  // Create a data storage sheet\n  var sheetName \u003d \"Data Storage\";\n  var initialData \u003d {\u0027adLikesStatus\u0027:adLikesStatus, \u0027messagesStatus\u0027:messagesStatus, \u0027reactionsMap\u0027:Object.values(reactionsMap)};\n  var header \u003d Object.keys(initialData);\n  // Reshape array and write to sheet\n  var body \u003d Object.values(initialData);\n  body \u003d body[0].map((_, colIndex) \u003d\u003e body.map(row \u003d\u003e row[colIndex]));\n  var data \u003d [];\n  data.push(header);\n  data.push(...body);\n  var newSheet \u003d sheet.insertSheet(sheetName);\n  \n  // Write sheet settings\n  setHighlighting(\u0027FALSE\u0027);\n  setSorting(\u0027FALSE\u0027);\n  setMerging(\u0027FALSE\u0027);\n  \n  // Write the data\n  newSheet.getRange(1,1, data.length, header.length).setValues(data);\n  \n  // Trim to length\n  var deleteColumns \u003d newSheet.getMaxColumns() - newSheet.getLastColumn();\n  newSheet.deleteColumns((newSheet.getLastColumn() +1), deleteColumns); \n  \n  // Activate triggers\n  activateTriggers();\n\n  // popup, authenticate with facebook, give missionary tools facebook app permision to get page data\n  // write plan on how to get facebook data and dump it to sheet\n\n  // Restrict sorting on the actual function\n}\n// TODO check if this is going on the individual sheet or the whole project\nfunction setHighlighting(value){\n  var sheet \u003d SpreadsheetApp.getActiveSheet();\n  sheet.addDeveloperMetadata(\u0027highlightEnabled\u0027, value);\n}\n\nfunction setSorting(value){\n  var sheet \u003d SpreadsheetApp.getActiveSheet();\n  sheet.addDeveloperMetadata(\u0027sortingEnabled\u0027, value);\n}\n\nfunction setMerging(value){\n  var sheet \u003d SpreadsheetApp.getActiveSheet();\n  sheet.addDeveloperMetadata(\u0027mergingEnabled\u0027, value);\n}\n\nfunction activateTriggers(){\n  /* Create the project triggers */ \n  \n  // Enable a trigger to run the page logic\n  var ss \u003d SpreadsheetApp.getActive();\n  ScriptApp.newTrigger(\u0027doLogicPageMessages\u0027)\n   .forSpreadsheet(ss)\n   .onChange()\n   .create();\n  \n  // Enable a triger to run on edit to do the highlights\n  var highlightSheetID \u003d ScriptApp.newTrigger(\u0027highlightSheet\u0027)\n  .forSpreadsheet(ss)\n  .onEdit()\n  .create();\n}\n\nfunction deactivateTrigger(){\n  /* Remove our project triggers */\n  var triggers \u003d ScriptApp.getProjectTriggers();\n   var removeOurTriggers \u003d function(trigger) {\n     if (triggerNames.includes(trigger.getHandlerFunction())) {\n       ScriptApp.deleteTrigger(trigger);\n     }\n   }\n  triggers.forEach(removeOurTriggers);\n}\n\nfunction tearDownSheet() {\n  /* Remove our sheets */\n  // Uninstaill the triggers\n  deactivateTrigger();\n  // Get the current active sheet\n  var sheet \u003d SpreadsheetApp.getActiveSpreadsheet();\n  var spreadSheet \u003d sheet.getActiveSheet();\n  \n  // Check if there are already sheets with the names to be created if so, give an error notifcation that the sheet names already exist\n  var sheetNames \u003d sheet.getSheets().map(sheet \u003d\u003e sheet.getName());\n  var neededSheetNames \u003d [\u0027Ad Likes\u0027, \u0027Page Messages\u0027, \u0027Data Storage\u0027];\n  var nameIntersection \u003d sheetNames.filter(name \u003d\u003e neededSheetNames.includes(name));\n  \n  // Delete the page messages, ad likes, and data storage sheet\n  if (nameIntersection \u003d\u003d\u003d undefined || nameIntersection.length \u003e 0){\n    nameIntersection.forEach(name \u003d\u003e sheet.deleteSheet(sheet.getSheetByName(name)));\n  }\n}\n\n"},{"id":"9c8220a8-3ba4-4f2d-8b1c-afc658d2641d","name":"PMI_utility","type":"server_js","source":"// Translate page header\nvar TableHeader \u003d function(){\n  var sheet \u003d SpreadsheetApp.getActiveSheet()\n  var header \u003d {\n    headerData: sheet.getRange(headerRowNumber, 1, 1, sheet.getLastColumn()).getValues()[0],\n    getColumnIndex(columnName) {return this.headerData.indexOf(columnName)}\n  }\n  return header;\n};\n\nvar Rule \u003d function(){\n    return {\u0027create\u0027: undefined};\n}; \n    "},{"id":"7945ddf2-7af3-435b-b3b8-797467fee29f","name":"PMI_core","type":"server_js","source":"function updateNewRow() {\n/*\n  \n*/\n  // Get the current active sheet\n  var sheet \u003d SpreadsheetApp.getActiveSheet();\n  \n  // Check if allowed to sort this sheet\n  var finder \u003d sheet.createDeveloperMetadataFinder();\n  var results \u003d finder.withKey(\u0027sortingEnabled\u0027);\n  var test \u003d results.find()[0].getValue();\n  if (test !\u003d \"TRUE\"){ return; }\n  \n  // Check if allowed to merge rows\n  var finder \u003d sheet.createDeveloperMetadataFinder();\n  var results \u003d finder.withKey(\u0027mergingEnabled\u0027);\n  var test \u003d results.find()[0].getValue();\n  var doMerge \u003d true;\n  if (test !\u003d \"TRUE\"){ doMerge \u003d false; }\n  \n  // Get range of all data\n  var range \u003d sheet.getDataRange().offset(headerRowNumber, 0, sheet.getLastRow() - headerRowNumber);\n  var values \u003d range.getValues();\n  \n  // Read in the table header translate to in\n  tableHeader \u003d new TableHeader;\n  \n  // Get the new entry row\n  var newRow \u003d values.pop();\n  \n  // Get the new entry PSID\n  var newPSID \u003d newRow[tableHeader.getColumnIndex(\u0027PSID\u0027)];\n  \n  // List of PSID of members\n  // Get rows where Member is true\n  var memberPSIDList \u003d values.filter(row \u003d\u003e row[tableHeader.getColumnIndex(\u0027Status\u0027)] \u003d\u003d \u0027Member\u0027)\n  .map(row \u003d\u003e row[tableHeader.getColumnIndex(\u0027PSID\u0027)]);\n  \n  // List of PSID of non members who have messaged the page\n  // Get rows where Member is false\n  var nonMemberPSIDList \u003d values.filter(row \u003d\u003e row[tableHeader.getColumnIndex(\u0027Status\u0027)] !\u003d \u0027Member\u0027)\n  .map(row \u003d\u003e row[tableHeader.getColumnIndex(\u0027PSID\u0027)]);\n  \n  \n  // Case 1 member messaging the page for multiple times\n  // PSID is in list of member PSIDs\n  if (memberPSIDList.includes(newPSID)) {\n    // Need to measure the length of array so we know how many blank rows to put back in\n    var initialLength \u003d values.length;\n    \n    // Remove all matching rows from sheet except the checked one\n    values \u003d values.filter(row \u003d\u003e row[tableHeader.getColumnIndex(\u0027PSID\u0027)] !\u003d newPSID || (row[tableHeader.getColumnIndex(\u0027PSID\u0027)] \u003d\u003d newPSID \u0026\u0026 row[tableHeader.getColumnIndex(\u0027Status\u0027)] \u003d\u003d \u0027Member\u0027));\n    \n    // Measure difference and add the blanks in\n    var finalLength \u003d values.length;\n    var difference \u003d (finalLength - initialLength) * -1;\n    var blankArray \u003d [...Array(difference + 1)].map(x\u003d\u003eArray(newRow.length))\n    values.push(...blankArray);\n    \n    // Find the old entry and increment the counter\n    objIndex \u003d values.findIndex(obj \u003d\u003e obj[tableHeader.getColumnIndex(\u0027PSID\u0027)] \u003d\u003d newPSID);\n    values[objIndex][tableHeader.getColumnIndex(\u0027Counter\u0027)] +\u003d 1 + difference;\n    \n    // Update the message for kicks\n    values[objIndex][tableHeader.getColumnIndex(\u0027Message\u0027)] \u003d newRow[tableHeader.getColumnIndex(\u0027Message\u0027)];\n  }\n  \n  // Case 2 non member messaging page for the multiple times\n  // PSID is in the non member list\n  else if (nonMemberPSIDList.includes(newPSID) \u0026\u0026 doMerge \u003d\u003d true){\n    // Bump the old row to the top\n    // Get the old row\n    objIndex \u003d values.findIndex(obj \u003d\u003e obj[tableHeader.getColumnIndex(\u0027PSID\u0027)] \u003d\u003d newPSID);\n    var oldRow \u003d values.splice(objIndex, 1)[0];\n    \n    // Update the old row with the new row\u0027s time stamp and message and increment the counter\n    oldRow[tableHeader.getColumnIndex(\u0027Date\u0027)] \u003d newRow[tableHeader.getColumnIndex(\u0027Date\u0027)];\n    oldRow[tableHeader.getColumnIndex(\u0027Message\u0027)] \u003d newRow[tableHeader.getColumnIndex(\u0027Message\u0027)];\n    oldRow[tableHeader.getColumnIndex(\u0027Counter\u0027)] +\u003d 1;\n    \n    // Move the old row to the top\n    values.unshift(oldRow);\n    \n    // Add a blank row to keep the length the same\n    var blankArray \u003d new Array(oldRow.length);\n    values.push(blankArray)\n  }\n  \n  // Case 3 member or non member first time messaging page\n  // PSID is not in list of non member or member PDIDs\n  else {\n    // Add default values\n    // If no time is added, insert it\n    // newRow[tableHeader.getColumnIndex(\u0027Date\u0027)] \u003d Utilities.formatDate(newRow[tableHeader.getColumnIndex(\u0027Date\u0027)], \"GMT-6\", \"MM/dd/yyyy\");\n    \n    // Reaction -\u003e map word to emoji\n    // newRow[tableHeader.getColumnIndex(\u0027Reaction\u0027)] \u003d reactionsMap[newRow[tableHeader.getColumnIndex(\u0027Reaction\u0027)].toUpperCase()];\n    \n    // Source -\u003e map number to an ad\n    // newRow[tableHeader.getColumnIndex(\u0027Source\u0027)] \u003d adIDMap[newRow[tableHeader.getColumnIndex(\u0027Source\u0027)]] \u003d\u003d undefined ? newRow[tableHeader.getColumnIndex(\u0027Source\u0027)] : adIDMap[newRow[tableHeader.getColumnIndex(\u0027Source\u0027)]];\n    \n    // Assignment -\u003e Default to first Ward\n    newRow[tableHeader.getColumnIndex(\u0027Assignment\u0027)] \u003d \u0027Ward 1\u0027;\n    \n    // Status -\u003e Select\n    newRow[tableHeader.getColumnIndex(\u0027Status\u0027)] \u003d \u0027Select\u0027;\n    \n    // @Sac -\u003e FALSE\n    newRow[tableHeader.getColumnIndex(\u0027@Sac\u0027)] \u003d \u0027FALSE\u0027;\n    \n    // On Date -\u003e FALSE\n    newRow[tableHeader.getColumnIndex(\u0027On Date\u0027)] \u003d \u0027FALSE\u0027;\n    \n    // Spot for Notes\n    newRow[tableHeader.getColumnIndex(\u0027Notes\u0027)] \u003d \"\";\n    \n    // Counter -\u003e 1\n    newRow[tableHeader.getColumnIndex(\u0027Counter\u0027)] \u003d 1;\n    \n    // Predict if name is male or female\n    var name \u003d newRow[tableHeader.getColumnIndex(\u0027Name\u0027)]\n    if (name) {\n      name \u003d name.split(\" \")[0];\n      var url \u003d \u0027https://api.genderize.io\u0027\n      + \u0027?name\u003d\u0027 + encodeURIComponent(name);\n      var response \u003d UrlFetchApp.fetch(url, {\u0027muteHttpExceptions\u0027: true});\n      var json \u003d response.getContentText();\n      var data \u003d JSON.parse(json);\n      var gender \u003d data[\u0027gender\u0027];\n    \n      // Guese gender\n      newRow[tableHeader.getColumnIndex(\u0027Gender\u0027)] \u003d gender;\n    }\n    \n    // Move the old row to the top\n    values.unshift(newRow);\n  }\n  \n  //Write the values back to the sheet\n  range.setValues(values);\n  \n  // End\n  return;\n}\n\n\nfunction updateDataValidationRules(){\n  /*\n  Function is reponsible for apply page wide data validation rules\n  */ \n  // Get the current active sheet\n  var sheet \u003d SpreadsheetApp.getActiveSheet();\n  \n  // Read in the table header translate to in\n  tableHeader \u003d new TableHeader;\n  \n  // Clear previous rules\n  var range \u003d sheet.getDataRange().offset(sheet.getLastRow(), 0, sheet.getMaxRows() - sheet.getLastRow()).setDataValidation(null);\n  \n  // Dictionary to hold all of our rules\n  var rules \u003d {};\n  \n  // Make \u0027Assignment\u0027 rule\n  var assignment \u003d new Rule;\n  assignment.create \u003d function(){\n    \n    // Make data validation rule for Assignment\n    var enforceAssignment \u003d SpreadsheetApp.newDataValidation();\n    enforceAssignment.requireValueInList(Object.keys(assignmentMap), true);\n    enforceAssignment.build();\n    \n    // Set the assignment range rule\n    sheet.getRange(2, tableHeader.getColumnIndex(\u0027Assignment\u0027)+1, sheet.getLastRow() - 1).setDataValidation(enforceAssignment);\n  };\n  rules[\"Assignment\"] \u003d assignment;\n  \n  // Make a \u0027Status\u0027 rule\n  var status \u003d new Rule;\n  status.create \u003d function(){\n    \n    // Make data validation rule for Status\n    var enforceStatus \u003d SpreadsheetApp.newDataValidation();\n    enforceStatus.requireValueInList(messagesStatus, true);\n    \n    // Set the status range rule andd apply the rule\n    sheet.getRange(2, tableHeader.getColumnIndex(\u0027Status\u0027)+1, sheet.getLastRow() - 1).setDataValidation(enforceStatus);\n  };\n  rules[\"Status\"] \u003d status;\n  \n  // Make a \u0027@Sac\u0027 rule\n  var atSac \u003d new Rule;\n  atSac.create \u003d function(){\n    \n    // Make data validation rule for check boxes\n    var enforceCheckbox \u003d SpreadsheetApp.newDataValidation();\n    enforceCheckbox.requireCheckbox();\n    enforceCheckbox.setAllowInvalid(false);\n    enforceCheckbox.build();\n    \n    // Get the atSac range and apply data validation check boxes\n    sheet.getRange(2, tableHeader.getColumnIndex(\u0027@Sac\u0027)+1, sheet.getLastRow() - 1).setDataValidation(enforceCheckbox);\n  };\n  rules[\"@Sac\"] \u003d atSac;\n  \n  // Make a \u0027On Date\u0027 rule\n  var onDate \u003d new Rule;\n  onDate.create \u003d function(){\n    \n    // Make data validation rule for check boxes\n    var enforceCheckbox \u003d SpreadsheetApp.newDataValidation();\n    enforceCheckbox.requireCheckbox();\n    enforceCheckbox.setAllowInvalid(false);\n    enforceCheckbox.build();\n    \n    // Get the \u0027On Date\u0027 range and apply data validation check boxes\n    sheet.getRange(2, tableHeader.getColumnIndex(\u0027On Date\u0027)+1, sheet.getLastRow() - 1).setDataValidation(enforceCheckbox);\n  };\n  rules[\"On Date\"] \u003d onDate;\n  \n  // Make a \u0027Reaction\u0027 rule\n  var reaction \u003d new Rule;\n  reaction.create \u003d function(){\n    \n    // Make data validation rule for Reaction\n    var enforceReaction \u003d SpreadsheetApp.newDataValidation();\n    enforceReaction.requireValueInList(Object.values(reactionsMap), true);\n    enforceReaction.build();\n    \n    // Get the reaction range and apply data validation rule for reaction\n    sheet.getRange(2, tableHeader.getColumnIndex(\u0027Reaction\u0027)+1, sheet.getLastRow() - 1).setDataValidation(enforceReaction);\n  };\n  rules[\"Reaction\"] \u003d reaction;\n  \n  // Build the rules on for the current sheet\n  tableHeader.headerData.forEach(function(columnName){\n    if (rules.hasOwnProperty(columnName)){\n      rules[columnName].create(sheet);\n    }\n  });\n}\n\n\nfunction updateConditionalFormattingRules(){\n  /*\n  Adjust the conditional formating rules to cover the sheet data\n  */\n  // Get the current active sheet\n  var sheet \u003d SpreadsheetApp.getActiveSheet();\n  \n  // Read in the table header translate to in\n  tableHeader \u003d new TableHeader;\n  \n  // Track the conditional formatting\n  var sheetConditionalFormatRules \u003d [];\n  \n  // Get \u0027Name\u0027 column\n  var name \u003d sheet.getRange(2, tableHeader.getColumnIndex(\u0027Name\u0027)+1, sheet.getLastRow() - 1);\n  \n  // Get \u0027Assignment\u0027 column\n  var assignment \u003d sheet.getRange(2, tableHeader.getColumnIndex(\u0027Assignment\u0027)+1, sheet.getLastRow() - 1);\n  \n  // Format name to respective colors\n  var genderConditionalFormatRule \u003d SpreadsheetApp.newConditionalFormatRule()\n  \n  // Make conditional formatting rule to give the different genders\n  Object.keys(genderMap).forEach(function(key){\n    var genderConditionalFormatRule \u003d SpreadsheetApp.newConditionalFormatRule()\n    .whenFormulaSatisfied(`\u003dC2\u003d\"${key}\"`)\n    .setBackground(genderMap[key])\n    .setRanges([name])\n    .build();\n    sheetConditionalFormatRules.push(genderConditionalFormatRule);\n  });\n  \n  // Hide gender, PSID. source\n  sheet.hideColumns(tableHeader.getColumnIndex(\u0027Gender\u0027)+1);\n  sheet.hideColumns(tableHeader.getColumnIndex(\u0027PSID\u0027)+1);\n  // sheet.hideColumns(tableHeader.getColumnIndex(\u0027Source\u0027)+1);\n  \n  // Make conditional formatting rule to give the Assignments different colors\n  Object.keys(assignmentMap).forEach(function(key){\n    var assignmentConditionalFormatRule \u003d SpreadsheetApp.newConditionalFormatRule()\n    .whenTextEqualTo(key)\n    .setBackground(assignmentMap[key])\n    .setRanges([assignment])\n    .build();\n    sheetConditionalFormatRules.push(assignmentConditionalFormatRule);\n  });\n  \n  // Apply conditional formatting rule to sheet\n  sheet.setConditionalFormatRules(sheetConditionalFormatRules);\n}"},{"id":"efa96038-868c-4da6-991e-c2574e306391","name":"PMI_programSettings","type":"server_js","source":"// Program variables\nvar headerRowNumber \u003d 1;\n\n// List of ad likes status\nvar adLikesStatus \u003d [\"Select\", \"Pending\", \"Not Reached\", \"Left on Read\", \"Rejected\", \"Do Not Contact\", \"Member\", \"Currently Messaging\", \"Teaching\", \"Baptized\", \"Stopped Teaching\", \"Previously Contacted\"];\n\n// List of messages status\nvar messagesStatus \u003d [\"Select\", \"Left on Read\", \"Rejected\", \"Do Not Contact\", \"Member\", \"Currently Messaging\", \"Teaching\", \"Baptized\", \"Stopped Teaching\"];\n\n// Dictionary to map reactions\nvar reactionsMap \u003d {\"LIKE\": \u0027👍\u0027, \"LOVE\": \u0027❤️\u0027, \"CARE\": \u0027❤️\u0027, \"HAHA\": \u0027😆\u0027, \"WOW\": \u0027😮\u0027, \"SAD\": \u0027😥\u0027, \"ANGRY\": \u0027😡\u0027};\n\n// Dictionary to map wards to colors\nvar assignmentMap \u003d {\u0027Ward 1\u0027: \u0027#82C1EC\u0027, \u0027Ward 2\u0027: \u0027#F28530\u0027, \u0027Ward 3\u0027: \u0027#FCFBC2\u0027, \u0027Ward 4\u0027: \u0027#ECE3D4\u0027, \u0027Ward 5\u0027: \u0027#F9F85F\u0027};\n\n// Dictionary to map gender to colors\nvar genderMap \u003d {\u0027male\u0027: \u0027#6ca0dc\u0027, \u0027female\u0027: \u0027#f8b9d4\u0027};\n\n// Dictionary to map the ads ids to names\nvar adIDMap \u003d {};\n// Read the IDs set by the user some how\n\n// Dictionary to map the area ids to area names\nvar areaIDs \u003d {\u0027102302324777572\u0027: \u0027Grand Forks\u0027};\n\n// Initial row length\nvar initialRowLength \u003d 1000;\n\n// Name of courrent triggers\nvar triggerNames \u003d [\u0027doLogicPageMessages\u0027, \u0027highlightSheet\u0027];"},{"id":"c57241c0-ea32-475b-9f3f-03c202de32bc","name":"PMI_facebook","type":"server_js","source":"function myFunction() {\n  \n}\n"}]}