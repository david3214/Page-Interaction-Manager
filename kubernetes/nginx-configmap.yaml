kind: ConfigMap
apiVersion: v1
metadata:
  name: nginx-conf
data:
  nginx.conf: |
    worker_processes 1;
    user nobody nogroup;
    error_log  /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;

    events {
      worker_connections 1024; # increase if you have lots of clients
      accept_mutex off; # set to 'on' if nginx worker_processes > 1
    }

    http {
      include mime.types;
      default_type application/octet-stream;
      access_log /var/log/nginx/access.log combined;
      sendfile on;

      map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
      }

      upstream app_server {
        server app:8080 fail_timeout=0;
      }

      server {
        listen 80;
        location / {
          return 301 https://localhost:443$request_uri;
        }
      }

      server {
        listen 443 ssl;

        ssl_certificate /ssl/certificate.crt;
        ssl_certificate_key /ssl/private.key;

        access_log /var/log/nginx/data-access.log combined;

        location / {
          proxy_pass http://app_server;
          proxy_set_header X-Real-IP  $remote_addr;
          proxy_set_header X-Forwarded-For $remote_addr;
          proxy_set_header Host $host;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_redirect http://app_server $scheme://$http_host/;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection $connection_upgrade;
          proxy_read_timeout 20d;
          proxy_buffering off;
        }
      }
    }
