apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: app
  name: app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  strategy: {}
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
      - env:
        - name: CELERY_BROKER_URL
          valueFrom:
            configMapKeyRef:
              key: CELERY_BROKER_URL
              name: env
        - name: CELERY_RESULT_BACKEND
          valueFrom:
            configMapKeyRef:
              key: CELERY_RESULT_BACKEND
              name: env
        - name: CLIENT_SECRETS_FILE
          valueFrom:
            configMapKeyRef:
              key: CLIENT_SECRETS_FILE
              name: env
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              key: DATABASE_URL
              name: env
        - name: FLASK_CONFIG
          valueFrom:
            configMapKeyRef:
              key: FLASK_CONFIG
              name: env
        - name: PORT
          valueFrom:
            configMapKeyRef:
              key: PORT
              name: env
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              key: REDIS_URL
              name: env
        image: 9f3fb9e39a72
        imagePullPolicy: "Never"
        name: app
        ports:
        - containerPort: 5000
        # - containerPort: 8080
        resources:
          requests:
            memory: "2Gi"
            cpu:    "500m"
          limits:
            memory: "2Gi"
            cpu: 500m
      - name: db
        image: mysql:8
        args:
          - "--default-authentication-plugin=mysql_native_password"
        env:
          - name: MYSQL_ROOT_PASSWORD
            value: example
          - name: MYSQL_DATABASE
            value: testing
        ports:
        - containerPort: 3306
        resources:
          requests:
            memory: "1Gi"
            cpu:    "50m"
          limits:
            memory: "1Gi"
            cpu: 100m
      hostname: app
      restartPolicy: Always
status: {}
